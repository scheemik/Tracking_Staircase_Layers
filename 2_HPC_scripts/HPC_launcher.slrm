#!/bin/bash
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=40
#SBATCH --time=0-00:40  								# d-HH:MM
#SBATCH --account=def-ngrisoua
#SBATCH --mail-user=mschee@physics.utoronto.ca
#SBATCH --mail-type=ALL
#SBATCH --output=job_logs/%x_%j.txt						# %x = job_name, %j = job_number

# Author: Mikhail Schee

# Submit this script to a HPC with `sbatch`
# Takes in optional arguments:
#	$ sh HPC_launcher.slrm -j <job name> 				 Default: current datetime
#						   -b <BGR to use>			 	 string of BGR to use, ex: BGR0506
#						   -c <cluster m_pts>			 value to use for m_pts

# Having a ":" after a flag means an option is required to invoke that flag
while getopts j:b:c: option
do
	case "${option}"
		in
		j) JOBNAME=${OPTARG};;
		b) BGR=${OPTARG};;
		c) CLS=${OPTARG};;
	esac
done

# check to see if arguments were passed
if [ -z "$JOBNAME" ]
then
	JOBNAME=$DATETIME
	echo "-j, No name specified, using JOBNAME=$JOBNAME"
else
  echo "-j, Name specified, using JOBNAME=$JOBNAME"
fi
if [ -z "$BGR" ]
then
	BGR=false
else
	echo "-b, Clustering the period $BGR"
fi
if [ -z "$CLS" ]
then
	CLS=false
else
	echo "-c, Clustering data instead of parameter sweep with m_pts=$CLS"
fi

# Current datetime
DATETIME=`date +"%Y-%m-%d_%Hh%M"`
echo "Launched script: $DATETIME"

###############################################################################
# Load module stack for Niagara
# module loading sets values of environment variables
#   so have these commands before the `export` lines
module load NiaEnv/2019b
module load gcc/8.3.0 
module load intelmpi/2019u5
# module load python/3.7.9
module load python/3.8.5

export FFTW_PATH=$EBROOTFFTW
export MPI_PATH=$EBROOTOPENMPI
export FFTW_STATIC=1
export OMPI_MCA_mpi_warn_on_fork=0
# export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK
export MPLCONFIGDIR=$SCRATCH/.config/matplotlib

# Activate the clusterer virtual environment
source ~/.virtualenvs/clusterer2/bin/activate
echo "python3 --version: $(python3 --version)"

###############################################################################
# Start the experiment script

echo "Running script"
mpiexec -n 40 python3 HPC_cluster_data.py $BGR $CLS
echo ""
echo 'Done running script'
